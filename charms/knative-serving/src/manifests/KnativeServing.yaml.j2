apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: {{ app_name }}
  # TODO: make this configurable
  namespace: {{ serving_namespace }}
spec:
  version: {{ serving_version }}
  config:
    # This is analogous to the config-istio configmap
    istio:
      # TODO
      # To define the external gateway:
      # gateway.NAMESPACE-OF-GATEWAY.NAME-OF-GATEWAY: SOME-SERVICE.SOME-NAMESPACE.svc.cluster.local (I dont know what this is for, but if we cite an invalid namespace here the knative-serving object will not fully deploy)
      gateway.{{ gateway_namespace }}.{{ gateway_name }}: "some-workload.knative-operator.svc.cluster.local"
      # Defines the internal (inside cluster) gateway:
      # local-gateway.<local-gateway-namespace>.knative-local-gateway: "knative-local-gateway.<istio-namespace>.svc.cluster.local"
      # Where local-gateway-namespace is the same as the knative-namespace and istio-namespace is where istio is deployed, in this particular
      # case we know the gateway namespace and the istio namespace will be the same
      local-gateway.{{ serving_namespace }}.knative-local-gateway: "knative-local-gateway.{{ gateway_namespace }}.svc.cluster.local"
    # This is analogous to the config-domain configmap
    domain:
      {{ domain }}: ""
{% if otel_collector_svc_name %}
    observability:
      metrics.backend-destination: opencensus
      metrics.request-metrics-backend-destination: opencensus
      metrics.opencensus-address: {{ otel_collector_svc_name }}.{{ otel_collector_svc_namespace }}:{{ otel_collector_port }}
{% endif %}
